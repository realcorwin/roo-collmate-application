// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package dik.roo.collmate.web;

import dik.roo.collmate.domain.Dvd;
import dik.roo.collmate.service.api.DvdService;
import dik.roo.collmate.web.DvdsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect DvdsItemJsonController_Roo_JSON {
    
    declare @type: DvdsItemJsonController: @RestController;
    
    declare @type: DvdsItemJsonController: @RequestMapping(value = "/rest/dvds/{dvd}", name = "DvdsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DvdService DvdsItemJsonController.dvdService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param dvdService
     */
    @Autowired
    public DvdsItemJsonController.new(DvdService dvdService) {
        this.dvdService = dvdService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DvdService
     */
    public DvdService DvdsItemJsonController.getDvdService() {
        return dvdService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dvdService
     */
    public void DvdsItemJsonController.setDvdService(DvdService dvdService) {
        this.dvdService = dvdService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Dvd
     */
    @ModelAttribute
    public Dvd DvdsItemJsonController.getDvd(@PathVariable("dvd") Long id) {
        Dvd dvd = dvdService.findOne(id);
        if (dvd == null) {
            throw new NotFoundException(String.format("Dvd with identifier '%s' not found",id));
        }
        return dvd;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dvd
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> DvdsItemJsonController.show(@ModelAttribute Dvd dvd) {
        return ResponseEntity.ok(dvd);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dvd
     * @return UriComponents
     */
    public static UriComponents DvdsItemJsonController.showURI(Dvd dvd) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(DvdsItemJsonController.class).show(dvd))
            .buildAndExpand(dvd.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedDvd
     * @param dvd
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> DvdsItemJsonController.update(@ModelAttribute Dvd storedDvd, @Valid @RequestBody Dvd dvd, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        dvd.setId(storedDvd.getId());
        getDvdService().save(dvd);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dvd
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> DvdsItemJsonController.delete(@ModelAttribute Dvd dvd) {
        getDvdService().delete(dvd);
        return ResponseEntity.ok().build();
    }
    
}
