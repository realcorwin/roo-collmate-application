// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package dik.roo.collmate.domain;

import dik.roo.collmate.domain.Cd;
import dik.roo.collmate.domain.reference.Status;
import java.util.Calendar;
import java.util.Objects;

privileged aspect Cd_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Cd.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Cd
     */
    public Cd Cd.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Cd.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Cd
     */
    public Cd Cd.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String Cd.getName() {
        return this.name;
    }
    
    /**
     * Sets name value
     * 
     * @param name
     * @return Cd
     */
    public Cd Cd.setName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Gets performer value
     * 
     * @return String
     */
    public String Cd.getPerformer() {
        return this.performer;
    }
    
    /**
     * Sets performer value
     * 
     * @param performer
     * @return Cd
     */
    public Cd Cd.setPerformer(String performer) {
        this.performer = performer;
        return this;
    }
    
    /**
     * Gets releaseYear value
     * 
     * @return String
     */
    public String Cd.getReleaseYear() {
        return this.releaseYear;
    }
    
    /**
     * Sets releaseYear value
     * 
     * @param releaseYear
     * @return Cd
     */
    public Cd Cd.setReleaseYear(String releaseYear) {
        this.releaseYear = releaseYear;
        return this;
    }
    
    /**
     * Gets diskCount value
     * 
     * @return String
     */
    public String Cd.getDiskCount() {
        return this.diskCount;
    }
    
    /**
     * Sets diskCount value
     * 
     * @param diskCount
     * @return Cd
     */
    public Cd Cd.setDiskCount(String diskCount) {
        this.diskCount = diskCount;
        return this;
    }
    
    /**
     * Gets medium value
     * 
     * @return String
     */
    public String Cd.getMedium() {
        return this.medium;
    }
    
    /**
     * Sets medium value
     * 
     * @param medium
     * @return Cd
     */
    public Cd Cd.setMedium(String medium) {
        this.medium = medium;
        return this;
    }
    
    /**
     * Gets label value
     * 
     * @return String
     */
    public String Cd.getLabel() {
        return this.label;
    }
    
    /**
     * Sets label value
     * 
     * @param label
     * @return Cd
     */
    public Cd Cd.setLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Gets status value
     * 
     * @return Status
     */
    public Status Cd.getStatus() {
        return this.status;
    }
    
    /**
     * Sets status value
     * 
     * @param status
     * @return Cd
     */
    public Cd Cd.setStatus(Status status) {
        this.status = status;
        return this;
    }
    
    /**
     * Gets added value
     * 
     * @return Calendar
     */
    public Calendar Cd.getAdded() {
        return this.added;
    }
    
    /**
     * Sets added value
     * 
     * @param added
     * @return Cd
     */
    public Cd Cd.setAdded(Calendar added) {
        this.added = added;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Cd.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Cd)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Cd) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Cd.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Cd.toString() {
        return "Cd {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", name='" + name + '\'' + 
                ", performer='" + performer + '\'' + 
                ", releaseYear='" + releaseYear + '\'' + 
                ", diskCount='" + diskCount + '\'' + 
                ", medium='" + medium + '\'' + 
                ", label='" + label + '\'' + 
                ", added='" + added == null ? null : java.text.DateFormat.getDateTimeInstance().format(added.getTime()) + '\'' + "}" + super.toString();
    }
    
}
